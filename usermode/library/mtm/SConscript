import sys
sys.path.append('%s/library' % (Dir('#').abspath))
from configuration import mtm

buildEnv = mtm.Environment()
buildEnv.Append(CCFLAGS = '-g -O2')
buildEnv.Append(CCFLAGS = '-fno-omit-frame-pointer')
buildEnv.Append(CPPPATH = ['#library'])
buildEnv.Append(CPPPATH = 'src/sysdeps/linux/x86')
buildEnv.Append(CPPPATH = 'src/sysdeps/linux')
buildEnv.Append(CPPPATH = 'src/sysdeps/x86')
buildEnv.Append(CPPPATH = 'src/sysdeps/posix')
buildEnv.Append(CPPPATH = 'src/sysdeps/generic')
buildEnv.Append(CPPPATH = 'src')
buildEnv.Append(CPPPATH = 'src/common')
buildEnv.Append(LINKFLAGS = ['-g', '-fPIC'])
buildEnv.Append(ASFLAGS = '-DHAVE_CONFIG_H -Wall -g -O2 -fPIC')

# Programs to generate VTable mappings to the Intel ABI. Ask Haris.
srcgen_sjlj = buildEnv.Program('generate_sjlj', 'src/srcgen/generate_sjlj.c')
srcgen_vtable = buildEnv.Program('generate_vtable', 'src/srcgen/generate_vtable.c')

CC_SRC = Split("""
               src/gc.c
               src/init.c
               src/intelabi.c
               src/local.c
               src/mode/mode.c
               src/mode/pwb/beginend.c
               src/mode/pwb/memcpy.c
               src/mode/pwb/memset.c
               src/mode/pwb/pwb.c
               src/mode/pwb/barrier.c
               src/mode/wbetl/barrier.c
               src/mode/wbetl/beginend.c
               src/mode/wbetl/memcpy.c
               src/mode/wbetl/memset.c
               src/mode/wbetl/wbetl.c
               src/mode/serial/serial.c
               src/mtm.c
               src/nonvolatile_write_set.c
               """)

CC_LINUX_SRC = Split("""src/sysdeps/linux/rwlock.c
						src/sysdeps/linux/futex.c""")

S_SRC = Split("""src/sysdeps/x86/sjlj.S""")

SRC = CC_SRC + S_SRC + CC_LINUX_SRC

MtmLibrary = buildEnv.SharedLibrary('mtm', SRC, LIBRARY = Import('CommonObjects'))
Return('MtmLibrary')
