import os
import sys
sys.path.append('%s/library' % (Dir('#').abspath))
from configuration import mnemosyne

Import('env')
configEnv = env.Clone()
buildEnv = mnemosyne.Environment()

Import('CommonObjects')
buildEnv.Append(CPPPATH = ['#library'])
buildEnv.Append(LIBS = CommonObjects)
buildEnv.Append(LIBS = ['elf'])
buildEnv.Append(CCFLAGS = ' -m64 ')
buildEnv.Append(LINKFLAGS = ' -T '+ configEnv['MY_UTIL_DIR'] + '/linker_script_persistent_segment_m64')
buildEnv.Append(CCFLAGS = '-DHAVE_CONFIG_H -Wall -pthread')

if configEnv['BUILD_DEBUG'] == True:
	buildEnv.Append(CCFLAGS = ' -g -D_MNEMOSYNE_BUILD_DEBUG')
else:
	buildEnv.Append(CCFLAGS = ' -O2')

C_SRC = Split("""
              init.c
              address_space.c
              malloc.c
              segment.c
              """)

SRC = C_SRC

if configEnv['LINKAGE'] == 'dynamic':
	MnemosyneLibrary = buildEnv.SharedLibrary('mnemosyne', SRC)
else:
	MnemosyneLibrary = buildEnv.StaticLibrary('mnemosyne', SRC)
Return('MnemosyneLibrary')
