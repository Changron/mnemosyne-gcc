Import('env')

buildEnv = env.Clone()

#buildEnv.Append(CCFLAGS = '-msse -m32 -DHAVE_CONFIG_H -march=i486 -mtune=i686 -fomit-frame-pointer -Wall -pthread -g -O2')
#buildEnv.Append(CCFLAGS = '-DHAVE_CONFIG_H -Wall -pthread -g -O2 -fPIC')
#buildEnv['CCFLAGS'] = ['-DHAVE_CONFIG_H -Wall -pthread -g -O2 -fPIC']
buildEnv.Append(CCFLAGS = '-g -O2')

buildEnv['CPPPATH'] = ['#src/mtm']
buildEnv.Append(CPPPATH = '#src/mtm/config/linux/x86')
buildEnv.Append(CPPPATH = '#src/mtm/config/linux')
buildEnv.Append(CPPPATH = '#src/mtm/config/x86')
buildEnv.Append(CPPPATH = '#src/mtm/config/posix')
buildEnv.Append(CPPPATH = '#src/mtm/config/generic')

#buildEnv.Append(LINKFLAGS = ['-m32'])
buildEnv.Append(LINKFLAGS = ['-g'])
#buildEnv.Append(ASFLAGS = '-m32 -DHAVE_CONFIG_H -march=i486 -mtune=i686 -fomit-frame-pointer -Wall -g -O2')
buildEnv.Append(ASFLAGS = '-DHAVE_CONFIG_H -Wall -g -O2 -fPIC')

#					readonly/method-readonly.c

CC_SRC = Split("""aatree.c
					alloc.c
					alloc_c.c
					alloc_cpp.c
					eh_cpp.c
					init.c
					intelabi.c
					local.c
					retry.c
					wbetl/barrier.c
					wbetl/beginend.c
					wbetl/memcpy.c
					wbetl/memset.c
					serial/serial.c
					useraction.c
					vtable.c
					""")

CC_LINUX_SRC = Split("""config/linux/rwlock.c
						config/linux/futex.c""")

CC_POSIX_SRC = Split("""config/posix/page.c""")

CC_X86_SRC = Split("""config/x86/copymask.c""")
#						config/x86/x86_sse.c
#						config/x86/x86_avx.c

S_SRC = Split("""config/x86/sjlj.S""")

SRC = CC_SRC + S_SRC + CC_LINUX_SRC + CC_X86_SRC + CC_POSIX_SRC

buildEnv.SharedLibrary('itmdyn', SRC)
