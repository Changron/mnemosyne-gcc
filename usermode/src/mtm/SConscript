import sys
from configuration import mtm
env = mtm.Environment('default')

buildEnv = env.Clone()

buildEnv.Append(CCFLAGS = '-g -O2')

buildEnv['CPPPATH'] = ['#src/mtm']
buildEnv.Append(CPPPATH = '#src/mtm/sysdeps/linux/x86')
buildEnv.Append(CPPPATH = '#src/mtm/sysdeps/linux')
buildEnv.Append(CPPPATH = '#src/mtm/sysdeps/x86')
buildEnv.Append(CPPPATH = '#src/mtm/sysdeps/posix')
buildEnv.Append(CPPPATH = '#src/mtm/sysdeps/generic')

buildEnv.Append(LINKFLAGS = ['-g'])
buildEnv.Append(ASFLAGS = '-DHAVE_CONFIG_H -Wall -g -O2 -fPIC')

# Programs to generate VTable mappings to the Intel ABI. Ask Haris.
srcgen_sjlj = buildEnv.Program('generate_sjlj', 'srcgen/generate_sjlj.c')
srcgen_vtable = buildEnv.Program('generate_vtable', 'srcgen/generate_vtable.c')

CC_SRC = Split("""
					gc.c
					init.c
					intelabi.c
					local.c
					mode/mode.c
					mode/wbetl/barrier.c
					mode/wbetl/beginend.c
					mode/wbetl/memcpy.c
					mode/wbetl/memset.c
					mode/wbetl/wbetl.c
					mode/serial/serial.c
					mtm.c
					""")

# Mike Swift's code for transaction-safe locks.
CC_LINUX_SRC = Split("""sysdeps/linux/rwlock.c
						sysdeps/linux/futex.c""")

S_SRC = Split("""sysdeps/x86/sjlj.S""")

SRC = CC_SRC + S_SRC + CC_LINUX_SRC

buildEnv.SharedLibrary('itmdyn', SRC)
