import os
import sys
import string
sys.path.append('%s/library' % (Dir('#').abspath))

def addUnitTest(env, osenv, unit_test, args):
	env.Append(UNIT_TEST_CMDS = [[osenv, unit_test, args]])

Import('mcoreLibrary', 'mallocLibrary', 'mtmLibrary')
Import('mainEnv')
testEnv = mainEnv.Clone()

# For correct and complete compilation.
testEnv.Append(CCFLAGS = ' -m64 -g')
testEnv.Append(CCFLAGS = ' -Qtm_enabled -fpic ')
testEnv.Append(LINKFLAGS = ' -Qtm_enabled ')
testEnv.Append(LINKFLAGS = ' -T '+ 'util/linker_script_persistent_segment_m64')
testEnv.AddMethod(addUnitTest, "addUnitTest")

Export('testEnv')
Export('mcoreLibrary', 'mallocLibrary', 'mtmLibrary')

thedir=os.getcwd()
dirs = [ name for name in os.listdir(thedir) if os.path.isdir(os.path.join(thedir, name)) ]

for d in dirs:
	SConscript('%s/SConscript' % d)
