import os
from library.configuration import mnemosyne

AddOption('--example',
           action="store", dest='selected_example',
           type='string',
           metavar='NAME',
           help='build this example')
AddOption("--build-debug",
           action="store_true", dest="build_debug", 
           default = True,
           help="build library with debug info [default]")
AddOption("--linkage",
          action="store", dest="linkage", 
          type="choice", choices=["dynamic", "static"],
          default = "dynamic",
          help="library linkage: dynamic, static [default: %default]")

# Custom help message. Overrides the help output of the local options.
Help("""
Type: 'scons' to build the libraries.
      'scons check' to build and run unit tests.
""")

# Ugly hack to extract the optparse help output for my local options and add 
# it to our custom help text.
import SCons.Script.Main as main
help_lines = main.OptionsParser.format_help().split('\n')
count = 0
for help_line in help_lines:
	count = count+1
	if help_line == "Local Options:":
		break

option_help = '\n'.join(help_lines[count-1:])
Help(option_help)

env = mnemosyne.Environment()
env['BUILD_DEBUG'] = GetOption('build_debug')
env['LINKAGE'] = GetOption('linkage')
env['EXAMPLE'] = GetOption('selected_example')
rootDir = os.getcwd()
env['MY_ROOT_DIR'] = rootDir
env['MY_UTIL_DIR'] = os.path.join(rootDir, 'util')
Export('env')

CommonObjects = SConscript('library/common/SConscript', variant_dir = 'build/library/common')
MnemosyneLibrary = SConscript('library/mnemosyne/SConscript', 'CommonObjects', variant_dir = 'build/library/mnemosyne')
MtmLibrary = SConscript('library/mtm/SConscript', 'CommonObjects', variant_dir = 'build/library/mtm')

if env['EXAMPLE'] != None:
	examplesEnv = env.Clone()
	examplesEnv['CPPPATH'] = ['#library/mnemosyne/include', '#library/mtm/include']
	Export('examplesEnv')
	Export('MnemosyneLibrary', 'MtmLibrary')
	SConscript('examples/SConscript', variant_dir = os.path.join('build', 'examples'))

#Testing Environment
Export('MnemosyneLibrary', 'MtmLibrary')
unit_tests = SConscript('test/SConscript', variant_dir = os.path.join('build', 'test'))
env.Alias('check', unit_tests[0].path)
AddPostAction(unit_tests, unit_tests[0].path)
